name: Build production files and bump version

on:
  push:
    branches:
      - main

jobs:
  tag:
    runs-on: ubuntu-latest
    permissions:
      contents: write
    steps:
      - name: Check out the repository
        uses: actions/checkout@v4
        with:
          fetch-depth: 0 # Fetch all history for all tags and branches

      - name: Setup Bun
        uses: oven-sh/setup-bun@v2
        with:
          bun-version: latest

      # At the time being, seems like caching isn't required. Direct install seems faster than cache load
      # @link https://github.com/oven-sh/setup-bun/issues/14#issuecomment-1714116221

      - name: Install dependencies
        run: bun install

      - name: Build project
        run: bun run build

      - name: Commit and push if dist folder changed
        run: |
          git config --global user.name 'GitHub Action'
          git config --global user.email 'action@github.com'
          git add dist
          git diff --quiet && git diff --staged --quiet || (git commit -m "Update production build" && git push)

      - name: Bump version and push tag
        uses: anothrNick/github-tag-action@1.67.0
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          DEFAULT_BUMP: patch # Can be set to major, minor, or patch
          GIT_API_TAGGING: false # Fix for tag push reference error
          WITH_V: false # If you want your tag to start with 'v', e.g., v1.0.0

      - name: Wait for jsDelivr to update and purge cache
        run: |
          echo "Waiting for 30 seconds..."
          sleep 30
          echo "Purging jsDelivr cache for all files under dist..."
          PURGE_URL="https://purge.jsdelivr.net/gh/${{ github.repository }}@latest/dist/"
          echo "Sending purge request to: $PURGE_URL"

          # Perform curl request and capture output and status code
          HTTP_RESPONSE=$(curl -s -o response.txt -w "%{http_code}" -X POST "$PURGE_URL")

          # Print the response body and status code
          echo "Response body:"
          cat response.txt
          echo "HTTP status code: $HTTP_RESPONSE"

          # Check if the request was successful
          if [ $HTTP_RESPONSE -eq 200 ]; then
            echo "Cache purge request sent successfully."
          else
            echo "Error: Cache purge request failed with status code $HTTP_RESPONSE"
            exit 1
          fi

      - name: Verify cache purge
        run: |
          echo "Verifying cache purge..."
          VERIFY_URL="https://cdn.jsdelivr.net/gh/${{ github.repository }}@latest/dist/"
          echo "Checking URL: $VERIFY_URL"

          response=$(curl -s -o /dev/null -w "%{http_code}" "$VERIFY_URL")
          echo "Verification HTTP status code: $response"

          if [ $response -eq 200 ]; then
            echo "Cache purge verification successful. New versions should now be available on jsDelivr."
          else
            echo "Warning: Cache purge verification returned status code $response. Please check manually."
            # Not exiting with error here as this might be due to CDN propagation delay
          fi
